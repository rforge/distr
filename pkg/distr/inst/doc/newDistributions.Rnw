%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Vignette  "How to generate new distributions in packages distr, distrEx"
%
% to produce from scratch, assumes that the /unpacked source/ packages
% distr and distrEx are in one layer of a tree, e.g. $Rhome/Rsrclib/distr,
% $Rhome/Rsrclib/distrEx
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%\VignetteIndexEntry{newDistributions}
%\VignetteDepends{startupmsg}
%\VignetteKeywords{probability distribution,estimation}
%\VignettePackage{distr}
%
\documentclass[11pt]{article}
\usepackage{geometry}\usepackage{color}
\usepackage{ifpdf}
\definecolor{darkblue}{rgb}{0.0,0.0,0.75}
\usepackage{amssymb}
\usepackage[%
baseurl={r-forge.r-project.org},%
pdftitle={How to generate new distributions in packages distr, distrEx},%
pdfauthor={Peter Ruckdeschel, Matthias Kohl},%
pdfsubject={distr},%
pdfkeywords={probability distribution,simulation,estimation},%
pagebackref,bookmarks,colorlinks,linkcolor=darkblue,citecolor=darkblue,%
pagecolor=darkblue,raiselinks,plainpages,pdftex]{hyperref}
%
\usepackage{Sweave}
\RequirePackage{color}
\RequirePackage{listings}  
%
\lstset{fancyvrb=true,language=R,basicstyle=\color{Rcolor}\small,
        commentstyle=\color{Rcomment}\ttfamily\itshape,
        literate={<-}{{$\leftarrow$}}2,
        morekeywords=[2]{Norm,Pois,lambda,p,d,r,distroptions}}
%\newcommand{\ttR}[1]{{\color{Rcolor}\tt #1\color{normal}}}
\definecolor{Rcolor}{rgb}{0,0.5,0.5}
\definecolor{Rout}{rgb}{0.461,0.039,0.102}
\definecolor{Rcomment}{rgb}{0.101,0.043,0.432}
%
\DefineVerbatimEnvironment{Sinput}{Verbatim}{formatcom=\color{Rcolor}\lstset{fancyvrb=true}}
\DefineVerbatimEnvironment{Soutput}{Verbatim}{formatcom=\color{Rout}\lstset{fancyvrb=false}}
\DefineVerbatimEnvironment{Scode}{Verbatim}{fontshape=sl,formatcom=\color{Rcolor}\lstset{fancyvrb=true}}
\markboth{\sl How to generate new distributions in packages ``{\tt distr}'', ``{\tt distrEx}''}%
{\sl How to generate new distributions in packages ``{\tt distr}'', ``{\tt distrEx}''}
\ifthenelse{\boolean{Sweave@gin}}{\setkeys{Gin}{width=0.6\textwidth}}{}%
%
% -------------------------------------------------------------------------------
\newcommand{\code}[1]{{\tt\color{Rcolor} #1}}
\newcommand{\file}[1]{{\tt #1}}
%%\newcommand{\code}[1]{\lstinline[escapechar=`]{#1}}
\newcommand{\pkg}[1]{{\tt "#1"}}
\newcommand{\pkgversion}{{\tt 2.0}}
\newcommand{\pkgExversion}{{\tt 2.0}}
\newcommand{\Reals}{\mathbb{R}}
\newcommand{\R}{\mathbb{R}}
\newcommand{\N}{\mathbb{N}}
\SweaveOpts{keep.source=TRUE}
% -------------------------------------------------------------------------------
%
% -------------------------------------------------------------------------------
\begin{document}
% -------------------------------------------------------------------------------
\title{Howto generate new Distributions in packages \pkg{distr}, \pkg{distrEx}}
%,version \pkgExversion}
\author{\small Peter Ruckdeschel\thanks{Fraunhofer ITWM, Kaiserslautern}
\\[-.5ex]
\small Matthias Kohl\thanks{Universit\"at Bayreuth}
\smallskip\\
\small Fraunhofer ITWM\\[-.5ex]
\small Fraunhofer Platz 1\\[-.5ex]
\small 67663 Kaiserslautern\\[-.5ex]
\small Germany\\
\small e-Mail: {\small \tt Peter.Ruckdeschel@itwm.fraunhofer.de}\\
}
\maketitle
% -------------------------------------------------------------------------------
\begin{abstract}
% -------------------------------------------------------------------------------
In this vignette, we give short examples how to produce new
distributions in packages \pkg{distr} and \pkg{distrEx}.
% -------------------------------------------------------------------------------
\end{abstract}
% -------------------------------------------------------------------------------
Basically there are three ways to produce new
distributions in packages \pkg{distr} and \pkg{distrEx}:
\begin{enumerate}
\item automatic generation by arithmetics and the like
\item using generating functions
\item doing it from scratch
\end{enumerate}
We will give short examples of all three of them.
% -------------------------------------------------------------------------------
\section{Automatic generation by arithmetics and the like}
% -------------------------------------------------------------------------------
We have made available quite general arithmetical operations to our distribution 
objects, generating new image distributions automatically. As an example, try
<<echo=false,results=hide>>=
## preparation: set option withSweave to true
require(distr)
distroptions(withSweave = TRUE)
@
<<exam1, eval = TRUE, fig = TRUE>>=
require(distr)
N <- Norm(mean = 2, sd = 1.3)
P <- Pois(lambda = 1.2)
Z <- 2*N + 3 + P
Z
plot(Z)
p(Z)(0.4)
q(Z)(0.3)
Zs <- r(Z)(50)
Zs
@
\par
\noindent{\bf Comment:}\\
Let \code{N} an object of class \code{"Norm"} with parameters  \code{mean=2},
\code{sd=1.3} and let \code{P}  an object of class \code{"Pois"} with parameter 
\code{lambda=1.2}. Assigning to \code{Z} the expression \code{2*N+3+P}, a 
new distribution object is generated ---of class \code{"AbscontDistribution"} in 
our case--- so that identifying \code{N}, \code{P}, \code{Z} with random 
variables distributed according to {\tt N}, {\tt P}, {\tt Z}, 
${\cal L}({\tt Z})={\cal L}(2*{\tt N}+3+{\tt P})$,  and writing \code{p(Z)(0.4)}  
we get $P(Z\leq 0.4)$, \code{ q(Z)(0.3)}  the $30\%$-quantile of {\tt Z},
and with \code{r(Z)(50)} we generate $50$ pseudo random numbers distributed 
according to {\tt Z}, while the \code{plot} command generates the above figure.\\

There a caveats to take care about; for details refer to the (larger) vignette
{\tt distr} in package \pkg{distrDoc}.
% -------------------------------------------------------------------------------
\section{Using generating functions}
% -------------------------------------------------------------------------------
If you want to generate a single distribution (without any particular parameter)
generating functions are the method of choice:\\


Objects of classes \code{LatticeDistribution} resp.\ 
\code{DiscreteDistribution}, 
\code{AbscontDistribution},  may be generated using the generating functions
\code{LatticeDistribution()} resp.\ \code{DiscreteDistribution()}
resp.\ \code{AbscontDistribution()}; see also
the corresponding help.\\

E.g., to produce a discrete distribution with
support $(1,5,7,21)$ with corresponding probabilities $(0.1,0.1,0.6,0.2)$
we may write
<<DiscrDist, eval = TRUE, fig = TRUE>>=
D <- DiscreteDistribution(supp = c(1,5,7,21), prob = c(0.1,0.1,0.6,0.2))
D
plot(D)
@
\newline
and to generate an absolutely continuos distribution with density proportional
to $e^{-|x|^3}$, we write
<<AbscDist, eval = TRUE, fig = TRUE>>=
AC <- AbscontDistribution(d = function(x) exp(-abs(x)^3), withStand = TRUE)
AC
plot(AC)
@
% -------------------------------------------------------------------------------
\section{Doing it from scratch}
% -------------------------------------------------------------------------------
If you would like to create new parametric distributions, using already 
implemented {\tt r}, {\tt d}, {\tt p}, and {\tt q} functions
(e.g.\ implementing additional distributions realized in another 
\href{http://cran.r-project.org}{\tt CRAN} package), 
you should probably better look at the implementation of some discrete and 
continuous parametric distributions in package \pkg{distr}.

\noindent{\small Hint: download the {\tt .tar.gz} file; extract it to some {\tt temp} 
folder; look at subdirectories {\tt R} and {\tt man}}\smallskip\\

The general procedure is as follows

\begin{enumerate}
\item introduce a  new subclass of  class \code{Parameter}
\item introduce a new subclass of  \code{LatticeDistribution}/%
\code{DiscreteDistribution} (if discrete)
 or of class \code{AbsContDistribution} (if continuous).
\item define accessor and replacement functions for the ``slots'' of the
parameter (e.g.\ \code{"size"} and \code{"prob"} in the binomial case), 
possibly with new generics
\item (possibly) define a validity function
\item define a generating function
\item if existing, define particular convolution methods or similar particular
methods for this new distribution class
\item create {\tt .Rd} files for the
\begin{itemize}
      \item parameter class
      \item distribution class
\end{itemize}
\item if analytic expressions are available, define particular \code{E}-, \code{var}-, 
\code{skewness}-, and \code{kurtosis}-methods
     and if so, also document\footnote{%
%
this is new, because so far, all \code{E}-, \code{var}-, 
\code{skewness}-, and \code{kurtosis}-methods for ``basic'' 
distributions are documented in the \pkg{distrEx} documentation to 
\code{E}, \code{var}, \ldots, but this would not be operational
any longer for new derived classes, possibly defined in other, new packages
%
     } the corresponding methods in
     the distribution class {\tt .Rd} file\\
\end{enumerate}
    
Let's go through the steps in the example case of the Binomial implementation
in packages \pkg{distr} and \pkg{distrEx}:

\begin{enumerate}
\item in \pkg{distr}, see source in \file{R/AllClasses.R},  lines 181--190
\lstinputlisting[firstline=181,lastline=190]{../../../distr/R/AllClasses.R}
\item in \pkg{distr}, see source in \file{R/AllClasses.R},  lines 830--857
\lstinputlisting[firstline=830,lastline=857]{../../../distr/R/AllClasses.R}
\item in \pkg{distr}, see source in \file{R/BinomialDistribution.R},  lines 8--16 and 43--53
\lstinputlisting[firstline=8,lastline=16]{../../../distr/R/BinomialDistribution.R}
\lstinputlisting[firstline=43,lastline=53]{../../../distr/R/BinomialDistribution.R}
     and \file{R/AllGenerics}, lines 142--146
\lstinputlisting[firstline=142,lastline=146]{../../../distr/R/AllGenerics.R}
\item in \pkg{distr}, see source in \file{R/BinomialDistribution.R},  lines 18--33
\lstinputlisting[firstline=18,lastline=33]{../../../distr/R/BinomialDistribution.R}
\item in \pkg{distr}, see source in \file{R/BinomialDistribution.R},  line 41
\lstinputlisting[firstline=41,lastline=41]{../../../distr/R/BinomialDistribution.R}
\item in \pkg{distr}, see source in \file{R/BinomialDistribution.R},  lines 54--69
\lstinputlisting[firstline=54,lastline=69]{../../../distr/R/BinomialDistribution.R}
\item in \pkg{distr}, see sources in
\begin{itemize}
     \item\file{man/BinomParameter-class.Rd}
\lstinputlisting[language=TeX,basicstyle=\color{black}\tiny]{../../../distr/man/BinomParameter-class.Rd}
   \item\file{man/Binom-class.Rd} 
  \lstinputlisting[language=TeX,basicstyle=\color{black}\tiny]{../../../distr/man/Binom-class.Rd}
     \item {\footnotesize you could have: \file{man/Binom.Rd}
      for the generating function; in the Binomial case, documentation is in
      \file{Binom-class.Rd}; but in case of the Gumbel distribution,
      in package \pkg{distrEx}, there is such an extra {\tt .Rd} file}
\end{itemize}
\item in \pkg{distrEx}, see sources in
\begin{itemize}
      \item\file{Expectation.R}, lines 293--299
\lstinputlisting[firstline=293,lastline=299]{../../../distrEx/R/Expectation.R}
      \item\file{Functionals.R}, lines 158--165
\lstinputlisting[firstline=158,lastline=165]{../../../distrEx/R/Functionals.R}
      \item\file{skewness.R}, lines 60--67
\lstinputlisting[firstline=60,lastline=67]{../../../distrEx/R/Skewness.R}
      \item\file{kurtosis.R}, lines 69--77
\lstinputlisting[firstline=69,lastline=77]{../../../distrEx/R/Kurtosis.R}
\end{itemize}
\end{enumerate}
The procedure will be similar for \textit{any} new class of distributions.\medskip
\begin{itemize}
  \item[Comment] In the classes in package \pkg{distr} (historically the ``oldest''
  in the development of this project), we still use \code{initialize} methods;
  this is no longer needed, if you provide generating functions; for this ``more
  recent'' approach, confer the realization of class \code{Gumbel} in package \pkg{distrEx}.
\end{itemize}

% -------------------------------------------------------------------------------
\section{Help needed  / collaboration welcome}
% -------------------------------------------------------------------------------
You are --- as announced on  
\href{http://distr.r-forge.r-project.org}{\tt http://distr.r-forge.r-project.org} ---
         very welcome to collaborate in this project!
See in particular
\href{http://distr.r-forge.r-project.org/HOWTO-collaborate.txt}%
{\tt http://distr.r-forge.r-project.org/HOWTO-collaborate.txt}

With this you should be able to start working.
\begin{thebibliography}{2}

\bibitem{K:R:S:04}
Kohl M., Ruckdeschel P. and Stabla T.
\newblock {General Purpose Convolution Algorithm for Distributions in S4-Classes 
by means of FFT}.
\newblock unpublished manual


\bibitem{R:K:S:C:04}
Ruckdeschel P., Kohl M., Stabla T., and Camphausen F. 
\newblock {S4 Classes for Distributions.} 
\newblock {\em R-News\/}, {\bf 6}(2): 10--13.
\newblock http://CRAN.R-project.org/doc/Rnews/Rnews\_2006-2.pdf
%\newblock See also {http://www.uni-bayreuth.de/departments/math/org/mathe7/RUCKDESCHEL/pubs/distr.pdf}

\end{thebibliography}

% -------------------------------------------------------------------------------
\end{document}
% -------------------------------------------------------------------------------
