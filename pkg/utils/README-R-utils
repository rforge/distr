#####################################################
# Howto to R - utils -- version 2.8 (020818)
#####################################################

########### R - Utils

### finde.R :
#
# searches for a given pattern (possibly with regular expressions)
# in all files with a given file extension in a given folder
# similarly replaces patterns
# Syntax (as of branch >= distr-2.8 and trunk from 2018-08-02)

finde(x = "nchar", dir = "C:/rtest/distr/pkg/distr/R",
                  ext = "R", restrictFilepattern = "", excludeFilepattern = "",
                  excludeext = "", withEmpty = FALSE, rec = FALSE)
## args: x : pattern to be found (may be a regexp; 
##       dir: folder to be searched; 
##       ext: file extension[s] to which the search is restricted (can be a vector) 
##            here: ext = all that comes after the last "." 
##       restrictFilePattern: pattern[s] in file name to which the search is restricted 
##                            (can be a vector) 
##       excludeFilePattern: pattern[s] in file name to be excluded from the search  
##                            (can be a vector) 
##       excludeext: file extension[s] to be excluded from the search (can be a vector)
##       withEmpty: logical should empty extensions be included in the search
##       rec: recursive in subfolders?
##  semantics: if any of the restrictFilePattern, excludeFilepattern, excludeext is 
##             a vector of length 1 and == "", no restriction is done through this arg
##             if length of arg ext is 1 and == "" and withEmpty is TRUE, only empty
##                restrictions are searched; if in the same case withEmpty is FALSE
##                no restrictions based on ext are done 
##             otherwise whenever withEmpty is TRUE the empty extensions are included
##                in the search 

ersetze(x0 = "nchar", x1 = "nchar", dir = "C:/rtest/distr/pkg/distr/R",
                    ext = "R", restrictFilepattern = "", excludeFilepattern = "",
                    excludeext = "", rec = FALSE, withEmpty = FALSE,
                    withoverwrite = FALSE)
## args: x0: pattern to be replaced
##       x1: replacing text
##       withoverwrite: if FALSE only found items are shown (to check this first before
##                       going "real" ..) from 2.8 on, only files with found items are
##                       overwritten in case of withoverwrite == TRUE (was a bug before)  
##       all other args as with finde()  
##  semantics: as with finde(); in fact, finde now calls ersetze() with args 
##             x1="" and withoverwrite = FALSE 

### ladealles.R
#
# sources in all .R - files from a given folder
# Syntax

ladeall(DIR="distr", develDir = "C:/rtest", pattern = "")
## args: DIR :     relative path to folder starting from develDir
##       develDir: development folder (absolute path)
##       pattern:  regexpr. for files to be sourced in

### DESCRIPTIONutils.R :
#
# sources in some utils to update DESCRIPTION files and connected/linked
#    other information files

changeDescription(startDir ,names, values, pkgs = NULL ,withSVNread = TRUE,
                  withPackageHelpUpdate = TRUE, pathRepo = NULL, 
				  withDate = TRUE, inRforge = TRUE, withlogin = TRUE,   
                  PathToBash = "C:/cygwin64/bin/bash",  
				  PathToreadsvnlog.sh="C:/rtest/distr/branches/distr-2.4/pkg/utils",
                  tmpfile = "C:/rtest/tmp-svnlog5.txt", verbose = FALSE)
## args: startDir: folder with pkgs to be updated,
##                  e.g. "C:/rtest/distr/branches/distr-2.6"
##         names: names of the DESCRIPTION tags to be updated
##         values: values of the DESCRIPTION tags to be updated
##               (a matrix, columns = pkgs and row = tags see examples)
##         pkgs: pkgs to be updated; if NULL all pkgs in startfolder
##         withSVNread: should VCS/SVNRevision be updated
##         withPackageHelpUpdate: should file <pkg>-package.Rd in man be updated
##         pathRepo: path to svn repo; if NULL deduced from startDir assuming r-forge
##         withDate: shall date be updated?
##         inRforge: shall we use r-forge as repository
##                  (otherwise need full URL as arg pathRepo
##         withlogin: do we need option --login (yes in cygwin, don't know in Linux)
##         PathToBash: path to bash
##         PathToreadsvnlog.sh:  path to shell script readsvnlog.sh
##         tmpfile: some tmpfile to which we write the results temporarily; 
##                  is deleted afterwords
##         verbose: how verbose should we be?
##
## uses getRevNr() in getRevNr.R in  utils
## for examples see DESCRIPTIONutilsExamples.R 


### compare.R :
#
# compares (recursively over all slots / list elements)
# two objects, i.e. it prints the corresponding slots of object1
# directly on top of the corresponding slots of object2
# Syntax

compare(obj1, obj2, level = 0)
## obj1,obj2: objects to compare; level: used internally for indentation

### setNewEmail.R

# automatically changes an e-mail adress in all (Text)-
# package files: (with extension .R, .Rd, .Html, .htm, .TeX, .Rnw)
# and in corresponding HTML-folders as well as in the DESCRIPTION files

### setNewRVersion.R

# automatically updates date and version information in a series
# of package files:
#       + for pkgname in packs:
#         in DESCRIPTION
#             * package version
#             * Date
#             * required R version
#         if pkgname == distrDoc:
#            in distr.Rnw file
#               * change pkg-, pkgEx- version
#         if withHTML  in .html file
#             * on top :
#               - package version
#               - release Date
#               - required R version
# no longer from version 2.0 on:
#             * at "Download" (if not already there)
#                - Win-zip-file      information and URL-link
#                - Linux-tar-gz-file information and URL-link
# end: no longer from version 2.0 on
#             * at "Changes" (if not already there)
#                - header "Changes from <old-pkg-version> to <pkg-version>
#                - template list
#             * on bottom of file:
#                - "last updated on" - Date
#       + if rkurs:
#         in rkurs.tex:
#             * package version of distr-family
# Syntax

setNewversion(
              dev.dir = "C:/rtest/",
              packs = c("startupmsg",
                        "distr",
                        "distrEx",
                        "distrDoc",
                        "distrSim",
                        "distrTEst",
                        "distrTeach",
                        "distrMod",
                        "robKalman",
                        "Benchmark"),
              packs.dir = paste(dev.dir, c(rep("distr/pkg",8),
                               "robKalman/pkg",""), sep=""),
              packs.ver = c("0.5", rep("2.0",7),"0.2","2.4"),
              packs.gtR = c(rep("2.2.0",8),"2.3.0",""),
              withHTML = TRUE,
              packs.HTML.dir = c("", paste(dev.dir,
                     c(rep("distr/www",7),"robKalman/www"),
                                      sep=""),""),
              rkurs = TRUE,
              rkursDir = "D:/Eigene Dateien/Arbeit/R-Kurs/"
              )
## args: dev.dir:         folder where packages are developped (as folders...)
##       packs:           vector of (names of) packages to be updated
##       packs.dir:       vector of same length as packs;
##                        names of the [/pkg if R-Forge] folders to the  packages
##       packs.ver:       vector of same length as packs;
##                        versions of the packages
##       packs.gtR:       vector of same length as packs;
##                        required R versions for the packages
##       packs.HTML.dir:  vector of same length as packs;
##                        names of the [/www if R-Forge] HTML folders to the packages
##       rkurs:         is R-Kurs to be updated?
##       rkursDir:      folder of R-Kurs
##       withHTML:      are HTML files to be updated?


### showAllFiles.R

# concatenate all TOBEDONE or similar files to one output


# Syntax

showAllFiles( type = "TOBEDONE$", dir = "C:/rtest/distr/",
              except = NULL, con = stdout()
                         ){
## args:  type:   type of Files to be concatenated (with regular expressions!)
##                typically something like
##                DESCRIPTION, NEWS, LICENSE, TOBEDONE, CITATION
##        dir:    top folder from which to recurse
##        except: exclude files matching this regular expressions
##        con:    outbound connection (usually stdout, but may be file too)

### some examples
if(FALSE){
 showAllFiles()
 showAllFiles(Type="NEWS", except="www")
 showAllFiles(dir="C:/rtest/robast")
}


### showsvnlog.R

# shows svn log information;
#   requires + bash shell (may be from cygwin!)
#                             + svn (not TortoiseSVN, but either cygwin-svn or tigris svn for Linux)

# Syntax
showsvnlog( pathRepo = "distr", inRforge = TRUE, withlogin = TRUE,
            PathToBash = "C:/cygwin/bin/bash",
            PathToUtils = "C:/rtest/distr/branches/distr-2.2/pkg/utils",
            fromRev = 501, toRev = 502, limit = 100,
            tmpfile = "C:/rtest/tmp-svnlog3.txt",
            con = stdout(), withChPaths = FALSE )
## args:  pathRepo:    the svn project name; in case of r-forge: project name suffices
##        inRforge:    do we use r-forge as repository
##                     (otherwise need full URL for arg. "pathRepo"
##        withlogin:   do we need option "--login" (yes in cygwin, don't know in Linux)
##        PathToBash:  path to bash-shell
##        PathToUtils: path to shell script readsvnlog.sh
##        fromRev:     arg for svn log --- first log-listed revision
##        toRev:       arg for svn log --- last log-listed revision;
##                     may be Inf or <0 => then use HEAD revision
##        limit:       how many revisions will be shown atmost
##        tmpfile:     some tmpfile to which we write the
##                     results temporarily; is deleted afterwords
##        con:         results are written to con; by default stdout, but
##                     may also be a file
##        withChPaths: shall changed files/paths be reported ?
##                     (^= verbose option of svn log)

### some examples
if(FALSE){
showsvnlog(from=500,to=520)
showsvnlog(from=300,to=Inf,limit=1000)
}

### getRevNr.R
#
## getRevNr
# searches for the SVN revision number in a repository

# Syntax

getRevNr(dir="C:/rtest/distr/")
## args: dir :     the path to the repository
### some examples
if(FALSE){
getRevNr()
getRevNr(dir="C:/rtest/robast/")
}

## getAllRevNr
# searches for the SVN revision number in a repository
# and all its subfolders

# Syntax

getAllRevNr(dir = "C:/rtest/distr/", 
            except = NULL,           
            listOrMax = "list"       
            )

## args: dir:       top folder from which to recurse
         except:    some exceptions (regular expressions!)
         listOrMax: do we return a list or only the max?
### some examples
if(FALSE){
getAllRevNr()
getAllRevNr(list="max")
getAllRevNr("C:/rtest/robast/")
}
